// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Visit.Infrastructure.Data;

#nullable disable

namespace Visit.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240505134849_InitialIdentityModel-v1")]
    partial class InitialIdentityModelv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Visit.Domain.Models.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationVisit")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeVisit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("Visit.Domain.Models.Visit", b =>
                {
                    b.OwnsOne("Visit.Domain.Models.Patient", "Patient", b1 =>
                        {
                            b1.Property<Guid>("VisitId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("ActivityStatus")
                                .HasColumnType("int");

                            b1.Property<string>("Address1")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("Address2")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<bool?>("AddressIsRegisterations")
                                .HasColumnType("bit");

                            b1.Property<string>("Assurance")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("CIN")
                                .HasColumnType("int");

                            b1.Property<int?>("CNAM")
                                .HasColumnType("int");

                            b1.Property<int?>("Children")
                                .HasColumnType("int");

                            b1.Property<int?>("Country")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<DateTime?>("DateOfBirth")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Email")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("FamilyStatus")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Gender")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("Other");

                            b1.Property<int?>("Height")
                                .HasColumnType("int");

                            b1.Property<Guid?>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("LastName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<bool?>("SaveForNextTime")
                                .HasColumnType("bit");

                            b1.Property<string>("State")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int?>("Weight")
                                .HasColumnType("int");

                            b1.Property<int?>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("VisitId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("VisitId");
                        });

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
